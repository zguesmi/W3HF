// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CandidateAccepted extends ethereum.Event {
  get params(): CandidateAccepted__Params {
    return new CandidateAccepted__Params(this);
  }
}

export class CandidateAccepted__Params {
  _event: CandidateAccepted;

  constructor(event: CandidateAccepted) {
    this._event = event;
  }

  get candidateId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class CandidateNominated extends ethereum.Event {
  get params(): CandidateNominated__Params {
    return new CandidateNominated__Params(this);
  }
}

export class CandidateNominated__Params {
  _event: CandidateNominated;

  constructor(event: CandidateNominated) {
    this._event = event;
  }

  get candidateId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get twitterId(): string {
    return this._event.parameters[1].value.toString();
  }

  get ipfsCid(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class VotedForCandidate extends ethereum.Event {
  get params(): VotedForCandidate__Params {
    return new VotedForCandidate__Params(this);
  }
}

export class VotedForCandidate__Params {
  _event: VotedForCandidate;

  constructor(event: VotedForCandidate) {
    this._event = event;
  }

  get candidateId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class W3HF extends ethereum.SmartContract {
  static bind(address: Address): W3HF {
    return new W3HF("W3HF", address);
  }

  acceptanceThreshold(): BigInt {
    let result = super.call(
      "acceptanceThreshold",
      "acceptanceThreshold():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_acceptanceThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "acceptanceThreshold",
      "acceptanceThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _acceptanceThreshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class NominateCandidateCall extends ethereum.Call {
  get inputs(): NominateCandidateCall__Inputs {
    return new NominateCandidateCall__Inputs(this);
  }

  get outputs(): NominateCandidateCall__Outputs {
    return new NominateCandidateCall__Outputs(this);
  }
}

export class NominateCandidateCall__Inputs {
  _call: NominateCandidateCall;

  constructor(call: NominateCandidateCall) {
    this._call = call;
  }

  get _twitterId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _ipfsCid(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class NominateCandidateCall__Outputs {
  _call: NominateCandidateCall;

  constructor(call: NominateCandidateCall) {
    this._call = call;
  }
}

export class VoteForCandidateCall extends ethereum.Call {
  get inputs(): VoteForCandidateCall__Inputs {
    return new VoteForCandidateCall__Inputs(this);
  }

  get outputs(): VoteForCandidateCall__Outputs {
    return new VoteForCandidateCall__Outputs(this);
  }
}

export class VoteForCandidateCall__Inputs {
  _call: VoteForCandidateCall;

  constructor(call: VoteForCandidateCall) {
    this._call = call;
  }

  get _candidateId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class VoteForCandidateCall__Outputs {
  _call: VoteForCandidateCall;

  constructor(call: VoteForCandidateCall) {
    this._call = call;
  }
}
